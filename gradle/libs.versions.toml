[versions]
agp = "8.3.2"
coilGif = "2.6.0"
kermit = "2.0.4"
koinVersion = "3.5.3"
kotlin = "2.0.0"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
pagingCompose = "3.3.0"
realmVersion = "1.16.0"
lifecycleRuntimeKtx = "2.8.3"
activityCompose = "1.9.0"
composeBom = "2024.06.00"
conventionalCommitsVersion = "3.1.3"
ktorVersion = "2.3.9"
logbackClassicVersion = "1.2.3"
appcompat = "1.7.0"
material = "1.12.0"
kotlinxSerializationJsonVersion = "1.6.3"
materialIconsExtended = "1.6.8"
mockitoCore = "5.7.0"
mockitoKotlin = "5.3.1"
serializationVersion = "2.0.0"
jetbrainsKotlinJvm = "2.0.0"
ktfmtVersion = "0.17.0"
coroutines = "1.8.0"
securityCryptoVersion = "1.1.0-alpha06"
timberVersion = "5.0.1"
lifecycleRuntimeComposeVersion = "2.8.3"
googleServices = "4.4.2"
firebaseAuth = "23.0.0"
material3Android = "1.2.1"
truth = "1.4.2"
uiTooling = "1.6.8"
voyager = "1.0.0"
kotlinCompilerExtensionVersion = "1.5.12"
coreSplashscreen = "1.0.1"
kamilVersion = "0.9.4"
animationGraphicsAndroid = "1.6.8"
pagingCommonAndroid = "3.3.0"
work = "2.9.0"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilGif" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coilGif" }
kamil-image-loader = {group = "media.kamel", name = "kamel-image", version.ref = "kamilVersion"}

# Compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
library-base = { module = "io.realm.kotlin:library-base", version.ref = "realmVersion" }
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeComposeVersion" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
androidx-work = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "work" }
koin-android-workmanager = { group = "io.insert-koin", name = "koin-androidx-workmanager", version.ref = "koinVersion" }

#ktor client
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktorClientAndroid = { module = "io.ktor:ktor-client-android", version.ref = "ktorVersion" }
ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorVersion" }
ktorClientSerialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktorVersion" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorVersion" }
ktroClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktorClientAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktorVersion" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassicVersion" }
kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJsonVersion" }
ktorSerializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }

# Dependency injection
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinVersion" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koinVersion" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinVersion" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinVersion" }

# Storage repositories
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
securityCrypto = { module = "androidx.security:security-crypto-ktx", version.ref = "securityCryptoVersion" }

# Voyager
truth = { module = "com.google.truth:truth", version.ref = "truth" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-screenModel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koinVersion" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorVersion" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timberVersion" }
firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "uiTooling" }
androidx-animation-graphics-android = { group = "androidx.compose.animation", name = "animation-graphics-android", version.ref = "animationGraphicsAndroid" }
androidx-paging-common-android = { group = "androidx.paging", name = "paging-common-android", version.ref = "pagingCommonAndroid" }

[bundles]
ktor = [
    "ktorClientCore",
    "ktorClientAndroid",
    "ktorClientCio",
    "ktorClientAuth",
    "ktor-client-mock",
    "ktorClientSerialization",
    "ktorClientLogging",
    "logbackClassic",
    "ktroClientContentNegotiation",
    "ktorSerializationJson"
]

koin-worker = [
    "koin-core",
    "koin-android",
    "koin-android-workmanager"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
conventionalCommits = { id = "it.nicolasfarabegoli.conventional-commits", version.ref = "conventionalCommitsVersion" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serializationVersion" }
jetbrainsKotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
ktfmt = { id = "com.ncorti.ktfmt.gradle", version.ref = "ktfmtVersion" }
kotlinxParcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "serializationVersion" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
realm= { id = "io.realm.kotlin", version.ref = "realmVersion"}
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
